target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  threading: false,
  keepalive: true
}

import Display from "lib/Display.lf"

preamble {=
  #include <stdio.h>
  #include <pico/stdlib.h>
  #include <hardware/gpio.h>
=}

reactor CountModes {
  
}


main reactor {
    preamble {=
        static void* action;
        static uint8_t ModeVal;
        static int32_t CountVariable;
        gpio_irq_callback_t* btn_callback(void){
          lf_schedule(action, 0);
        }
    =}

    physical action a
    initial mode UpCounting  {
      disp1 = new Display()
      timer timer1(0, 1 sec); 
  
      reaction (timer1) -> disp1.line0, disp1.line1, DownCounting {=
        
        if (ModeVal == 1){
          lf_set_mode(DownCounting);
        }
        
        CountVariable ++;
  
        static char buf0[20];
        static char buf1[20];
        
        snprintf(buf0, 17, "UpCount @1sec");
        snprintf(buf1, 17, "%ld", CountVariable);
        
        lf_set(disp1.line0, buf0);
        lf_set(disp1.line1, buf1);
        
      =}
    }
  
    mode DownCounting {
      disp2 = new Display()
      timer timer2(0, 2 sec); 
  
      reaction (timer2) -> disp2.line0, disp2.line1, UpCounting {=
        if (ModeVal == 0){
          lf_set_mode(UpCounting);
        }
        
        CountVariable --;
  
        static char buf0[20];
        static char buf1[20];
        
        snprintf(buf0, 17, "DownCount @2sec");
        snprintf(buf1, 17, "%ld", CountVariable);
        
        lf_set(disp2.line0, buf0);
        lf_set(disp2.line1, buf1);
      =}
    }
    

    reaction(startup) -> a {=
        action = a;
        ModeVal = 0;
        CountVariable = 0;
        gpio_set_irq_enabled_with_callback(PICO_DEFAULT_LED_PIN, GPIO_IRQ_EDGE_FALL , 1, btn_callback);
    =}

    reaction(a){=
      if (ModeVal == 0){
        ModeVal = 1;
      }
      else if (ModeVal == 1){
        ModeVal = 0;
      }
    =}
}
